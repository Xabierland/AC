;VARIABLES GLOBALES
ESTADO EQU 0x20
EVENTO EQU 0x21
VALOR_DISPLAY EQU 0x22
CONT1 EQU 0x23
CONT2 EQU 0x24
TICK EQU 0x25.0
ADCON EQU 0xC5
ADCH EQU 0XFE
PWMP EQU 0xFE
PWM0 EQU 0xFC
IEN0 EQU 0xA8

;PUERTOS
LED EQU P2.0
ZUMBADOR EQU P2.1
PLUS EQU P3.0
MINUS EQU P3.1
SWITCH EQU P3.2
SENSOR EQU P3.3

;VARIABLES DE ESTADOS
	;0
	;1
ES1_CONT1 EQU 0x26
ES1_CONT2 EQU 0x27
	;2
ES2_CONT1 EQU 0x28
ES2_CONT2 EQU 0X29	
	;3

;=======================INICIO====================
ORG 0X0000
	AJMP INICIO

ORG 0x007b
INICIO:
	ACALL INIT
MAIN:
	ACALL FSM
	AJMP MAIN
FSM:
	MOV A, ESTADO
	RL A
	MOV DPTR, #EST_TAB
	JMP @A+DPTR
EST_TAB:
	AJMP ESTADO0		;REPOSO
	AJMP ESTADO1		;ESPERA
	AJMP ESTADO2		;CALENTAR
	AJMP ESTADO3		;TRANSICION
;========================INIT=====================;
INIT:
	;VALORES INICIALES
	MOV ESTADO, #0
	MOV EVENTO, #0
	MOV VALOR_DISPLAY, #0
	MOV P3, #00000000b
	MOV CONT1, #0
	MOV CONT2, #0

	;PUERTOS ENTRADA
	SETB PLUS
	SETB MINUS
	SETB SWITCH
	SETB SENSOR

	;PUERTOS SALIDA
	CLR P0.0
	CLR P0.1
	CLR P0.2
	CLR P0.3
	CLR P0.4
	CLR P0.5
	CLR P0.6
	CLR P0.7
	CLR LED
	CLR ZUMBADOR

	;TIMER
	ORL TMOD, #00000010b
	ANL TMOD, #11110010b
	CLR TICK

	;VARIABLES DE ESTADOS
		;1
	MOV ES1_CONT1, #0
	MOV ES1_CONT2, #0
		;2
	MOV ES2_CONT1, #0
     	MOV ES2_CONT2, #0
	RET
;===================ESTADO0_REPOSO================;
ESTADO0:
	ACALL ES0_GEN_EV
	MOV A, EVENTO
	RL A
	MOV DPTR, #ES0_EV_TAB
	JMP @A+DPTR
ES0_EV_TAB:
	AJMP ES0_EV0			;EVENTO VACIO
	AJMP ES0_EV1			;ENCENDIDO
ES0_EV0:			;EVENTO VACIO
	RET
ES0_EV1:			;EVENTO ESPERA
	;PONER UN 0 EN PANTALLA
	MOV VALOR_DISPLAY, #0
	ACALL UPDATE_DISPLAY
	;LED ON - Nivel Alto

	;ZUMBIDO ON - Nivel Bajo
	
	;ENCENDER TIMER
	ACALL ENCENDER_TIMER
	;CAMBIAR AL ESTADO 1
	MOV ESTADO, #1
	;CAMBIAR EL EVENTO AL 0
	MOV EVENTO, #0
	RET
ES0_GEN_EV:
	;COMPROBAR SI SE HA PULSADO EL BOTON
	MOV C, SWITCH
	JC ES0_SWITCH
	RET
ES0_SWITCH:
	MOV EVENTO, #1
	RET
;====================ESTADO1_ESPERA================
ESTADO1:
	ACALL ES1_GEN_EV
	MOV A, EVENTO
	RL A
	MOV DPTR, #ES1_EV_TAB
	JMP @A+DPTR
ES1_EV_TAB:
	AJMP ES1_EV0
	AJMP ES1_EV1
	AJMP ES1_EV2
ES1_EV0:			;EVENTO VACIO
	RET
ES1_EV1:			;EVENTO REPOSO
	MOV ESTADO, #0
	MOV EVENTO, #0
	RET
ES1_EV2:			;EVENTO CALENTAR
	MOV ESTADO, #2
	MOV EVENTO, #0
	RET	
ES1_GEN_EV:
	;COMPROBAR SI SE HA COLOCADO RECIPIENTE
	MOV C, SENSOR
	JC ES1_SENSOR
	;COMPROBAR SI HA PASADO 0.1 SEGUNDOS
	MOV C, TICK
	JC ES1_TICK
	RET
ES1_SWITCH:
	MOV EVENTO, #1
	RET
ES1_SENSOR:
	MOV EVENTO, #2
	RET
ES1_TICK:
	CLR TICK
	INC ES1_CONT1
	MOV A, #100
	CLR C
	SUBB A, ES1_CONT1
	JZ ES1_1S
	RET
ES1_1S:
	MOV ES1_CONT1, #0
	INC ES1_CONT2
	MOV A, #15
	CLR C
	SUBB A, ES1_CONT2
	JZ ES1_15S
	RET

ES1_15S:
	MOV ES1_CONT2, #0
	MOV EVENTO, #1
	RET
;===================ESTADO2_CALENTAR===============
ESTADO2:
	ACALL ES2_GEN_EV
	MOV A, EVENTO
	RL A
	MOV DPTR, #ES2_EV_TAB
	JMP @A+DPTR
ES2_EV_TAB:
	AJMP ES2_EV0
	AJMP ES2_EV1
ES2_EV0:			;EVENTO VACIO
	RET
ES2_EV1:			;EVENTO TRANSICION
	MOV ESTADO, #3
	MOV EVENTO, #0		
	RET
ES2_GEN_EV:
	;SE HA PULSADO EL BOTON DE MENOS
	MOV C, MINUS
	JC ES2_MINUS
	;SE HA PULSADO EL BOTON DE MAS
	MOV C, PLUS
	JC ES2_PLUS
	;SE HA RETIRADO EL RECIPIENTE
	MOV C, SENSOR
	JNC ES2_SENSOR
	;
	MOV ES2_CONT1, #0
	MOV ES2_CONT2, #0
	RET
ES2_MINUS:
	MOV A, #0
	CLR C
	SUBB A, VALOR_DISPLAY
	JZ ES2_NOTHING
	DEC VALOR_DISPLAY
	ACALL UPDATE_DISPLAY
	RET
ES2_PLUS:
	MOV A, #10
	CLR C
	SUBB A, VALOR_DISPLAY
	JZ ES2_NOTHING
	INC VALOR_DISPLAY
	ACALL UPDATE_DISPLAY
	RET
ES2_SENSOR:
	MOV C, TICK
	JC ES2_TICK
	RET
ES2_TICK:
	CLR TICK
	INC ES2_CONT1
	MOV A, #100
	CLR C
	SUBB A, ES2_CONT1
	JZ ES2_1S
	RET
ES2_1S:
	MOV ES2_CONT1, #0
	INC ES2_CONT2
	MOV A, #30
	CLR C
	SUBB A, ES2_CONT2
	JZ ES2_30S
	RET
ES2_30S:
	MOV ES2_CONT2, #0
	MOV EVENTO, #1
	RET
ES2_NOTHING:
	RET
;==================ESTADO3_TRANSICION==============
ESTADO3:
	ACALL ES3_GEN_EV
	MOV A, EVENTO
	RL A
	MOV DPTR, #ES3_EV_TAB
	JMP @A+DPTR
ES3_EV_TAB:
	AJMP ES3_EV0
	AJMP ES3_EV1
ES3_EV0:			;EVENTO VACIO
	RET
ES3_EV1:			;EVENTO ESPERA
	MOV ESTADO, #0
	RET
ES3_GEN_EV:
	RET
;=======================DISPLAY====================
UPDATE_DISPLAY:
	ANL P0, #00000000b
	MOV A, VALOR_DISPLAY
	RL A
	MOV DPTR, #DISPLAY_FUNC
	JMP @A+DPTR
DISPLAY_FUNC:
	AJMP DISPLAY_0	;0
	AJMP DISPLAY_1	;1
	AJMP DISPLAY_2	;2
	AJMP DISPLAY_3	;3
	AJMP DISPLAY_4	;4
	AJMP DISPLAY_5	;5
	AJMP DISPLAY_6	;6
	AJMP DISPLAY_7	;7
	AJMP DISPLAY_8	;8
	AJMP DISPLAY_9	;9
	AJMP DISPLAY_P	;10
	AJMP DISPLAY_H	;11
	AJMP DISPLAY_HH	;12
DISPLAY_0:	;*gfedcba
	ORL P0, #00111111b
	RET
DISPLAY_1:
	ORL P0, #00000110b
	RET
DISPLAY_2:
	ORL P0, #01011011b
	RET
DISPLAY_3:
	ORL P0, #01001111b
	RET
DISPLAY_4:
	ORL P0, #01111111b
	RET
DISPLAY_5:
	ORL P0, #01101101b
	RET
DISPLAY_6:
	ORL P0, #01111101b
	RET
DISPLAY_7:
	ORL P0, #00001111b
	RET
DISPLAY_8:
	ORL P0, #01111111b
	RET
DISPLAY_9:
	ORL P0, #01101111b
	RET
DISPLAY_P:
	ORL P0, #01110011b
	RET
DISPLAY_H:
	ORL P0, #01110100b
	RET
DISPLAY_HH:
	ORL P0, #01110110b
	RET
;=========================ADC======================
ORG 0x53
INTERRUPCION_ADC:
	RETI
;========================TIMER=====================
ENCENDER_TIMER:
	ORL IEN0, #10000010b
	MOV TH0, #6
	MOV TL0, #6
	MOV CONT1, #0
	MOV CONT2, #0
	SETB TR0
	RET
APAGAR_TIMER:
	ANL IEN0, #00000000b
        CLR TR0
	RET
ORG 0x0B
INTERRUPCION_TIMER:
	PUSH PSW
	PUSH ACC

	INC CONT1
	MOV A, #127
	CLR C
	SUBB A, CONT1
	JNZ CONDTIMER

	MOV CONT1, #0
	INC CONT2
	MOV A, #8
	CLR C
	SUBB A, CONT2
	JNZ CONDTIMER

	MOV CONT2, #0
	SETB TICK			;HA PASADO 100ms!
	POP ACC
	POP PSW
	RETI
CONDTIMER:
	POP ACC
	POP PSW
	RETI
;========================END======================
END
