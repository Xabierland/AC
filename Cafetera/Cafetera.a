;**********************************************	VARIABLES GLOBALES
ESTADO		EQU 	R7
EVENTO		EQU	R6
DISPLAY1	EQU 	0x30
DISPLAY2	EQU 	0x31
;**********************************************	VARIABLES CAFE
BEBIDA_SELEC	EQU	0X23
;**********************************************	VARIABLES ESPERA
M_05		EQU	P1.0
M_10		EQU	P1.1
M_20		EQU	P1.2
MONEDERO	EQU	0X22
SEL_0		EQU	P1.5
SEL_1		EQU	P1.6
SEL_2		EQU	P1.7
PREC_LECHE	EQU	0x24
PREC_CORTADO	EQU	0x25
PREC_SOLO	EQU	0x26
;**********************************************	VARIABLES VASO
P_HAY_VASO	EQU	P3.1
SN_PONER_VASO	EQU	P1.3
NO_ESTA_VASO	EQU	0X20.0
;**********************************************	VARIABLES AGUA
P_LLENO_AGUA	EQU	P3.0
P_LLENAR_AGUA	EQU 	P0.7
ESTA_VACIO	EQU	0X21.0


;**********************************************	VARIABLES PWM
PWM_FLAG	EQU	0
PWM0		EQU	197		;Si 0 son 0V y 255 son 5V -> 197 son 3.86V

;**********************************************	MAIN, LOOP & INIT
ORG 0x00
	AJMP MAIN

;INTERRUPCIONES

;PROGRAMA PRINCIPAL
ORG 0x7B
MAIN:
	ACALL INIT

LOOP:
	ACALL MAQ_EST
	AJMP LOOP

INIT:
	MOV ESTADO,#0X00
	MOV EVENTO,#0X00
	;INIT ESTADO 0
	CLR M_05
	CLR M_10
	CLR M_20
	CLR MONEDERO
	CLR SEL_0
	CLR SEL_1
	CLR SEL_2
	;INIT ESTADO 1
	CLR P_HAY_VASO		;SOLO PARA PROBAR
	CLR SN_PONER_VASO
	SETB NO_ESTA_VASO
	;INIT ESTADO 4
	CLR P_LLENO_AGUA	;SOLO PARA PROBAR
	CLR P_LLENAR_AGUA
	SETB ESTA_VACIO
	
	RET

;**********************************************	MAQUINA DE ESTADOS
MAQ_EST:
	MOV A, ESTADO
	RL A
	MOV DPTR, #TABLA_ESTADOS
	JMP @A+DPTR
TABLA_ESTADOS:
	AJMP ESPERA		;#0X00
	AJMP PONER_VASO		;#0X01
;	AJMP ECHAR_CAFE		;#0X02
;	AJMP MOLER_CAFE		;#0X03
	AJMP ECHAR_AGUA		;#0X04	



;**********************************************	ESTADO 0: ESPERA
ESPERA:
	ACALL E0_GENERADOR_EVENTOS
	MOV A, EVENTO
	RL A
	MOV DPTR, #TABLA_E0_EVENTOS
	JMP @A+DPTR

E0_GENERADOR_EVENTOS:
	;Se introducen monedas?
	JB M_05, E0_SUMA_05	;Genera evento 1
	JB M_10, E0_SUMA_10	;Genera evento 1
	JB M_20, E0_SUMA_20	;Genera evento 1

	;Se ha seleccionado bebida?
	MOV A,P1
	RR A
	RR A
	RR A
	RR A
	RR A
	ANL A,#00000111b
	MOV B, A
	JZ NO_SELEC	;Genera Evento 0
	
	;Hay suficiente dinero?
	ACALL SEL_PREC_BEBIDA
	CLR C
	CJNE A, MONEDERO,COMPARACION	;Genera evento 2 o 3
	JNC DINERO_SUFIC		;Genera evento 3
	RET

E0_SUMA_05:
	CLR M_05
	CLR A
	MOV A,MONEDERO
	ADD A,#5
	MOV MONEDERO, A
	MOV EVENTO, #0X01
	RET

E0_SUMA_10:
	CLR M_10
	CLR A
	MOV A, MONEDERO
	ADD A,#10
	MOV MONEDERO, A
	MOV EVENTO, #0X01
	RET

E0_SUMA_20:
	CLR M_20
	CLR A
	MOV A,MONEDERO
	ADD A,#20
	MOV MONEDERO, A
	MOV EVENTO, #0X01
	RET

NO_SELEC:
	MOV EVENTO, #0X00
	RET

SEL_PREC_BEBIDA:	;Guarda en el acumulador el precio de la bebida
	INC A
	MOVC A, @A+PC
	RET
	DB 0H
	DB 28H
	DB 23H
	DB 1EH
	DB 0H
	DB 28H
	DB 23H
	DB 1EH

COMPARACION:
	JNC DINERO_NO_SUFIC	;Genera evento 2
	AJMP DINERO_SUFIC	;Genera evento 3
	RET

DINERO_NO_SUFIC:
	MOV EVENTO, #0X02
	RET

DINERO_SUFIC:
	MOV EVENTO, #0X03
	;GUARDAR DATOS BEBIDA
	RET

TABLA_E0_EVENTOS:
	AJMP E0_EVENTO_0	; Evento vacio
	AJMP E0_EVENTO_1	; Evento moneda introducida, actualizar display
	AJMP E0_EVENTO_2	; Bebida seleccionada pero dinero insuficiente
	AJMP E0_EVENTO_3	; Bebida seleccionada dinero suficiente

E0_EVENTO_0:
	RET

E0_EVENTO_1:
	;ACTUALIZAR EL DISPLAY CON VALOR DE MONEDERO
	MOV EVENTO,#0x00
	RET

E0_EVENTO_2:
	;VALOR NO SUFICIENTE
	;DISPLAY
	CLR SEL_0
	CLR SEL_1
	CLR SEL_2
	MOV EVENTO, #0x00
	RET

E0_EVENTO_3:
	MOV ESTADO, #0x01
	MOV EVENTO, #0X00
	MOV BEBIDA_SELEC,B
	CLR SN_PONER_VASO
	SETB NO_ESTA_VASO
	RET
;**********************************************	ESTADO 1: PONER_VASO
PONER_VASO:
	ACALL E1_GENERADOR_EVENTOS
	MOV A, EVENTO
	RL A
	MOV DPTR, #TABLA_E1_EVENTOS
	JMP @A+DPTR

E1_GENERADOR_EVENTOS:
	JB P_HAY_VASO, E1_PASAR_SIG_ESTADO
	JB NO_ESTA_VASO, E1_PONER_VASO
	MOV EVENTO, #0X00
	RET

E1_PONER_VASO:
	MOV EVENTO, #0X02
	CLR NO_ESTA_VASO
	RET

E1_PASAR_SIG_ESTADO:
	MOV EVENTO, #0X01
	RET

TABLA_E1_EVENTOS:
	AJMP E1_EVENTO_0
	AJMP E1_EVENTO_1
	AJMP E1_EVENTO_2

E1_EVENTO_0:
	RET

E1_EVENTO_1:
	MOV ESTADO, #0X02
	CLR SN_PONER_VASO
	;ENCENDER PESADO
	;PROGRAMAR TIMER
	RET

E1_EVENTO_2:
	SETB SN_PONER_VASO
	RET

;**********************************************	ESTADO 2: PESAR CAFE
PESAR_CAFE:
	ACALL E2_GENERADOR_EVENTOS
	MOV A, EVENTO
	RL A
	MOV DPTR, #TABLA_E2_EVENTOS
	JMP @A+DPTR

TABLA_E2_EVENTOS:
	AJMP E2_EVENTO_0

E2_EVENTO_0:
	RET

E2_EVENTO_1:
	RET

E2_GENERADOR_EVENTOS:
	MOV A, BEBIDA_SELEC
	ANL A, #00000100b
	JZ CAFE
	AJMP DESCAFE
	RET

CAFE:
	


;**********************************************	ESTADO 3: MOLER CAFE
;**********************************************	ESTADO 4: ECHAR AGUA
ECHAR_AGUA:
	ACALL E4_GENERADOR_EVENTOS
	MOV A, EVENTO
	RL A
	MOV DPTR, #TABLA_E4_EVENTOS
	JMP @A+DPTR

TABLA_E4_EVENTOS:
	AJMP E4_EVENTO_0
	AJMP E4_EVENTO_1
	AJMP E4_EVENTO_2

E4_GENERADOR_EVENTOS:
	JB P_LLENO_AGUA, E4_PASAR_SIG_ESTADO
	JB ESTA_VACIO, E4_ECHAR_AGUA
	MOV EVENTO, #0X00
	RET

E4_ECHAR_AGUA:
	MOV EVENTO, #0X02
	CLR ESTA_VACIO
	RET

E4_PASAR_SIG_ESTADO:
	MOV EVENTO, #0X05
	RET

E4_EVENTO_0:
	RET

E4_EVENTO_1:
	MOV ESTADO, #0X05
	CLR P_LLENAR_AGUA
	;PRECONDICIONES PROXIMO ESTADO
	RET

E4_EVENTO_2:
	SETB P_LLENAR_AGUA
	RET
;**********************************************	ESTADO 5: CALENTAR AGUA
;**********************************************	ESTADO 6: SERVIR CAFE
;**********************************************	ESTADO 7: ECHAR LECHE
;**********************************************	ESTADO 8: FIN



;**********************************************	PWM
;PWM	https://www.8051projects.net/wiki/Pulse_Width_Modulation
PWM_SETUP:
	MOV TMOD,#00H		;Timer 0 en modo 0
	MOV PWM0, #160
	SETB EA;		;Activar Interrupciones
	SETB ET0		;Activar las interrupciones del timer 0
	SETB TR0		;Empezar el timer

TIMER_0_INTERRUPT:
	JB PWM_FLAG, HIGH_DONE	;Si la flag esta en 1 saltamos a High_Done. Si no seguimos con Low_Done

LOW_DONE:
	SETB PWM_FLAG		;Pones la flag en 1		
	MOV TH0,PWM0		;Cargamos el valor mas alto del timer con el valor guardado en R7
	CLR TF0			;Limpiamos la flag del timer
	RETI	

HIGH_DONE:
	CLR PWM_FLAG		;Ponew la flag en 0	
	MOV A, #0FFH		;Movemos el valor 255 a A
	CLR C			;Limpiamos C que es el bit de llevada para que no afecte a la resta
	SUBB A, PWM0		;Restamos a A el valor de R7
	MOV TH0, A		;
	CLR TF0			;Limpiamos la flag del timer
	RETI

PWM_STOP:
	CLR TR0			
	RET

;**********************************************FIN
END



